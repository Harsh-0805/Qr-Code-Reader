{"ast":null,"code":"'use strict';\n\nvar _require = require('./errors'),\n  NoVideoInputDevicesError = _require.NoVideoInputDevicesError;\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\n  if (filteredDevices.length > 0) {\n    return filteredDevices[0].deviceId;\n  }\n  if (videoDevices.length == 1 || facingMode == 'user') {\n    return videoDevices[0].deviceId;\n  }\n  return videoDevices[1].deviceId;\n}\nvar getFacingModePattern = function getFacingModePattern(facingMode) {\n  return facingMode == 'environment' ? /rear|back|environment/ig : /front|user|face/ig;\n};\nfunction getDeviceId(facingMode) {\n  var chooseDeviceId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDeviceIdChooser;\n\n  // Get manual deviceId from available devices.\n  return new Promise(function (resolve, reject) {\n    var enumerateDevices = void 0;\n    try {\n      enumerateDevices = navigator.mediaDevices.enumerateDevices();\n    } catch (err) {\n      reject(new NoVideoInputDevicesError());\n    }\n    enumerateDevices.then(function (devices) {\n      // Filter out non-videoinputs\n      var videoDevices = devices.filter(function (device) {\n        return device.kind == 'videoinput';\n      });\n      if (videoDevices.length < 1) {\n        reject(new NoVideoInputDevicesError());\n        return;\n      }\n      var pattern = getFacingModePattern(facingMode);\n\n      // Filter out video devices without the pattern\n      var filteredDevices = videoDevices.filter(function (_ref) {\n        var label = _ref.label;\n        return pattern.test(label);\n      });\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode));\n    });\n  });\n}\nmodule.exports = {\n  getDeviceId: getDeviceId,\n  getFacingModePattern: getFacingModePattern\n};","map":{"version":3,"names":["_require","require","NoVideoInputDevicesError","defaultDeviceIdChooser","filteredDevices","videoDevices","facingMode","length","deviceId","getFacingModePattern","getDeviceId","chooseDeviceId","arguments","undefined","Promise","resolve","reject","enumerateDevices","navigator","mediaDevices","err","then","devices","filter","device","kind","pattern","_ref","label","test","module","exports"],"sources":["C:/Users/harsh/OneDrive/Documents/GitHub/Qr-Code-Reader/node_modules/react-qr-reader/lib/getDeviceId.js"],"sourcesContent":["'use strict';\r\n\r\nvar _require = require('./errors'),\r\n    NoVideoInputDevicesError = _require.NoVideoInputDevicesError;\r\n\r\nfunction defaultDeviceIdChooser(filteredDevices, videoDevices, facingMode) {\r\n  if (filteredDevices.length > 0) {\r\n    return filteredDevices[0].deviceId;\r\n  }\r\n  if (videoDevices.length == 1 || facingMode == 'user') {\r\n    return videoDevices[0].deviceId;\r\n  }\r\n  return videoDevices[1].deviceId;\r\n}\r\n\r\nvar getFacingModePattern = function getFacingModePattern(facingMode) {\r\n  return facingMode == 'environment' ? /rear|back|environment/ig : /front|user|face/ig;\r\n};\r\n\r\nfunction getDeviceId(facingMode) {\r\n  var chooseDeviceId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDeviceIdChooser;\r\n\r\n  // Get manual deviceId from available devices.\r\n  return new Promise(function (resolve, reject) {\r\n    var enumerateDevices = void 0;\r\n    try {\r\n      enumerateDevices = navigator.mediaDevices.enumerateDevices();\r\n    } catch (err) {\r\n      reject(new NoVideoInputDevicesError());\r\n    }\r\n    enumerateDevices.then(function (devices) {\r\n      // Filter out non-videoinputs\r\n      var videoDevices = devices.filter(function (device) {\r\n        return device.kind == 'videoinput';\r\n      });\r\n\r\n      if (videoDevices.length < 1) {\r\n        reject(new NoVideoInputDevicesError());\r\n        return;\r\n      }\r\n\r\n      var pattern = getFacingModePattern(facingMode);\r\n\r\n      // Filter out video devices without the pattern\r\n      var filteredDevices = videoDevices.filter(function (_ref) {\r\n        var label = _ref.label;\r\n        return pattern.test(label);\r\n      });\r\n\r\n      resolve(chooseDeviceId(filteredDevices, videoDevices, facingMode));\r\n    });\r\n  });\r\n}\r\n\r\nmodule.exports = { getDeviceId: getDeviceId, getFacingModePattern: getFacingModePattern };"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;EAC9BC,wBAAwB,GAAGF,QAAQ,CAACE,wBAAwB;AAEhE,SAASC,sBAAsB,CAACC,eAAe,EAAEC,YAAY,EAAEC,UAAU,EAAE;EACzE,IAAIF,eAAe,CAACG,MAAM,GAAG,CAAC,EAAE;IAC9B,OAAOH,eAAe,CAAC,CAAC,CAAC,CAACI,QAAQ;EACpC;EACA,IAAIH,YAAY,CAACE,MAAM,IAAI,CAAC,IAAID,UAAU,IAAI,MAAM,EAAE;IACpD,OAAOD,YAAY,CAAC,CAAC,CAAC,CAACG,QAAQ;EACjC;EACA,OAAOH,YAAY,CAAC,CAAC,CAAC,CAACG,QAAQ;AACjC;AAEA,IAAIC,oBAAoB,GAAG,SAASA,oBAAoB,CAACH,UAAU,EAAE;EACnE,OAAOA,UAAU,IAAI,aAAa,GAAG,yBAAyB,GAAG,mBAAmB;AACtF,CAAC;AAED,SAASI,WAAW,CAACJ,UAAU,EAAE;EAC/B,IAAIK,cAAc,GAAGC,SAAS,CAACL,MAAM,GAAG,CAAC,IAAIK,SAAS,CAAC,CAAC,CAAC,KAAKC,SAAS,GAAGD,SAAS,CAAC,CAAC,CAAC,GAAGT,sBAAsB;;EAE/G;EACA,OAAO,IAAIW,OAAO,CAAC,UAAUC,OAAO,EAAEC,MAAM,EAAE;IAC5C,IAAIC,gBAAgB,GAAG,KAAK,CAAC;IAC7B,IAAI;MACFA,gBAAgB,GAAGC,SAAS,CAACC,YAAY,CAACF,gBAAgB,EAAE;IAC9D,CAAC,CAAC,OAAOG,GAAG,EAAE;MACZJ,MAAM,CAAC,IAAId,wBAAwB,EAAE,CAAC;IACxC;IACAe,gBAAgB,CAACI,IAAI,CAAC,UAAUC,OAAO,EAAE;MACvC;MACA,IAAIjB,YAAY,GAAGiB,OAAO,CAACC,MAAM,CAAC,UAAUC,MAAM,EAAE;QAClD,OAAOA,MAAM,CAACC,IAAI,IAAI,YAAY;MACpC,CAAC,CAAC;MAEF,IAAIpB,YAAY,CAACE,MAAM,GAAG,CAAC,EAAE;QAC3BS,MAAM,CAAC,IAAId,wBAAwB,EAAE,CAAC;QACtC;MACF;MAEA,IAAIwB,OAAO,GAAGjB,oBAAoB,CAACH,UAAU,CAAC;;MAE9C;MACA,IAAIF,eAAe,GAAGC,YAAY,CAACkB,MAAM,CAAC,UAAUI,IAAI,EAAE;QACxD,IAAIC,KAAK,GAAGD,IAAI,CAACC,KAAK;QACtB,OAAOF,OAAO,CAACG,IAAI,CAACD,KAAK,CAAC;MAC5B,CAAC,CAAC;MAEFb,OAAO,CAACJ,cAAc,CAACP,eAAe,EAAEC,YAAY,EAAEC,UAAU,CAAC,CAAC;IACpE,CAAC,CAAC;EACJ,CAAC,CAAC;AACJ;AAEAwB,MAAM,CAACC,OAAO,GAAG;EAAErB,WAAW,EAAEA,WAAW;EAAED,oBAAoB,EAAEA;AAAqB,CAAC"},"metadata":{},"sourceType":"script"}