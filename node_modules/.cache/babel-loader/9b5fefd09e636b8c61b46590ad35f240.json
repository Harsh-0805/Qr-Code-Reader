{"ast":null,"code":"/*\r\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\n/* eslint-env node */\n'use strict';\n\nimport * as utils from '../utils';\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nexport function filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function (server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function (url) {\n        // filter STUN unconditionally.\n        if (url.indexOf('stun:') === 0) {\n          return false;\n        }\n        var validTurn = url.startsWith('turn') && !url.startsWith('turn:[') && url.includes('transport=udp');\n        if (validTurn && !hasTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return validTurn && !hasTurn;\n      });\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}","map":{"version":3,"names":["utils","filterIceServers","iceServers","edgeVersion","hasTurn","JSON","parse","stringify","filter","server","urls","url","deprecated","isString","indexOf","validTurn","startsWith","includes","length"],"sources":["C:/Users/harsh/OneDrive/Documents/GitHub/Qr-Code-Reader/node_modules/webrtc-adapter/src/js/edge/filtericeservers.js"],"sourcesContent":["/*\r\n *  Copyright (c) 2018 The WebRTC project authors. All Rights Reserved.\r\n *\r\n *  Use of this source code is governed by a BSD-style license\r\n *  that can be found in the LICENSE file in the root of the source\r\n *  tree.\r\n */\r\n/* eslint-env node */\r\n'use strict';\r\n\r\nimport * as utils from '../utils';\r\n// Edge does not like\r\n// 1) stun: filtered after 14393 unless ?transport=udp is present\r\n// 2) turn: that does not have all of turn:host:port?transport=udp\r\n// 3) turn: with ipv6 addresses\r\n// 4) turn: occurring muliple times\r\nexport function filterIceServers(iceServers, edgeVersion) {\r\n  let hasTurn = false;\r\n  iceServers = JSON.parse(JSON.stringify(iceServers));\r\n  return iceServers.filter(server => {\r\n    if (server && (server.urls || server.url)) {\r\n      let urls = server.urls || server.url;\r\n      if (server.url && !server.urls) {\r\n        utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\r\n      }\r\n      const isString = typeof urls === 'string';\r\n      if (isString) {\r\n        urls = [urls];\r\n      }\r\n      urls = urls.filter(url => {\r\n        // filter STUN unconditionally.\r\n        if (url.indexOf('stun:') === 0) {\r\n          return false;\r\n        }\r\n\r\n        const validTurn = url.startsWith('turn') &&\r\n            !url.startsWith('turn:[') &&\r\n            url.includes('transport=udp');\r\n        if (validTurn && !hasTurn) {\r\n          hasTurn = true;\r\n          return true;\r\n        }\r\n        return validTurn && !hasTurn;\r\n      });\r\n\r\n      delete server.url;\r\n      server.urls = isString ? urls[0] : urls;\r\n      return !!urls.length;\r\n    }\r\n  });\r\n}\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,OAAO,KAAKA,KAAK,MAAM,UAAU;AACjC;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgB,CAACC,UAAU,EAAEC,WAAW,EAAE;EACxD,IAAIC,OAAO,GAAG,KAAK;EACnBF,UAAU,GAAGG,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACL,UAAU,CAAC,CAAC;EACnD,OAAOA,UAAU,CAACM,MAAM,CAAC,UAAAC,MAAM,EAAI;IACjC,IAAIA,MAAM,KAAKA,MAAM,CAACC,IAAI,IAAID,MAAM,CAACE,GAAG,CAAC,EAAE;MACzC,IAAID,IAAI,GAAGD,MAAM,CAACC,IAAI,IAAID,MAAM,CAACE,GAAG;MACpC,IAAIF,MAAM,CAACE,GAAG,IAAI,CAACF,MAAM,CAACC,IAAI,EAAE;QAC9BV,KAAK,CAACY,UAAU,CAAC,kBAAkB,EAAE,mBAAmB,CAAC;MAC3D;MACA,IAAMC,QAAQ,GAAG,OAAOH,IAAI,KAAK,QAAQ;MACzC,IAAIG,QAAQ,EAAE;QACZH,IAAI,GAAG,CAACA,IAAI,CAAC;MACf;MACAA,IAAI,GAAGA,IAAI,CAACF,MAAM,CAAC,UAAAG,GAAG,EAAI;QACxB;QACA,IAAIA,GAAG,CAACG,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,EAAE;UAC9B,OAAO,KAAK;QACd;QAEA,IAAMC,SAAS,GAAGJ,GAAG,CAACK,UAAU,CAAC,MAAM,CAAC,IACpC,CAACL,GAAG,CAACK,UAAU,CAAC,QAAQ,CAAC,IACzBL,GAAG,CAACM,QAAQ,CAAC,eAAe,CAAC;QACjC,IAAIF,SAAS,IAAI,CAACX,OAAO,EAAE;UACzBA,OAAO,GAAG,IAAI;UACd,OAAO,IAAI;QACb;QACA,OAAOW,SAAS,IAAI,CAACX,OAAO;MAC9B,CAAC,CAAC;MAEF,OAAOK,MAAM,CAACE,GAAG;MACjBF,MAAM,CAACC,IAAI,GAAGG,QAAQ,GAAGH,IAAI,CAAC,CAAC,CAAC,GAAGA,IAAI;MACvC,OAAO,CAAC,CAACA,IAAI,CAACQ,MAAM;IACtB;EACF,CAAC,CAAC;AACJ"},"metadata":{},"sourceType":"module"}